(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{616:function(e,t,n){"use strict";n.r(t);var r=n(39),a=Object(r.a)({},(function(){var e=this.$createElement,t=this._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-----BEGIN RSA PUBLIC KEY-----\n(your base64-encoded RSA public key)\n-----END RSA PUBLIC KEY-----\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('var headers = req.Headers;\nif (!headers.TryGetValue("Authorization", out var tokenHeader))\n    return new StatusCodeResult(StatusCodes.Status403Forbidden);\n\nvar token = tokenHeader[0].Replace("Bearer ", "");\n\nvar publicKeyPem = Environment.GetEnvironmentVariable("Userfront_PublicKey");\nvar publicKey = RSA.Create();\npublicKey.ImportFromPem(publicKeyPem);\n\ntry\n{\n    var json = JwtBuilder.Create()\n                         .WithAlgorithm(new RS256Algorithm(publicKey))\n                         .MustVerifySignature()\n                         .Decode(token);\n}\ncatch (TokenExpiredException)\n...\ncatch (SignatureVerificationException)\n...\n')])])])])}),[],!1,null,null,null);t.default=a.exports}}]);